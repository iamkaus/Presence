// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String             @id @default(uuid())
  name         String
  email        String             @unique
  password     String
  role         Role
  phone        String
  createdAt    DateTime           @default(now())
  attendances  AttendanceRecord[]
  Class        Class[]
  Notification Notification[]
}

model Class {
  id          String             @id @default(uuid())
  subjectId   String
  subject     String
  teacher     User               @relation(fields: [teacherId], references: [id])
  teacherId   String
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime           @default(now())
  attendances AttendanceRecord[]
}

model AttendanceRecord {
  id          String           @id @default(uuid())
  student     User             @relation(fields: [studentId], references: [id])
  studentId   String
  class       Class            @relation(fields: [classId], references: [id])
  classId     String
  beforeClass DateTime?
  afterClass  DateTime?
  status      AttendanceStatus @default(ABSENT)
  createdAt   DateTime         @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  student   User     @relation(fields: [studentId], references: [id])
  studentId String
  message   String
  sentAt    DateTime @default(now())
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  LEFT_EARLY
  PARTIAL
}
